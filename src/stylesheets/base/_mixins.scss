@mixin textGlitch($name, $intensity, $textColor, $background, $width, $height) {
  color: $textColor;
  position: relative;
  $steps: $intensity;
  
  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          #{percentage($i*(1/$steps))} {
            clip: rect(
              random($height)+px,
              $width+px,
              random($height)+px,
              0
            );
          }
        }
      }
    }
  }

  &:before,
  &:after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background: $background;
    clip: rect(0, 900px, 0, 0);
    overflow: hidden;
  }

  &:before {
    left: -2px;
  }

  &:after {
    left: 2px;
  }

  &.play:before {
    animation: #{$name}-anim-2 3s 1 linear alternate-reverse 1s;
  }

  &.play:after {
    animation: #{$name}-anim-1 4s infinite linear alternate-reverse 1s;
  }
  
}


@mixin imgGlitch($name, $intensity, $width, $height, $top, $left) {
  $steps: $intensity;
  
  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          #{percentage($i*(1/$steps))} {
            clip: rect(
              random($height)+px,
              $width+px,
              random($height)+px,
              0
            );
          }
        }
      }
    }
  }
  
  > img {
    position: absolute;
    top: $top+px;
    left: $left+px;
  }

  > img:nth-child(2),
  > img:nth-child(3){
    clip: rect(0, 0, 0, 0); 
  }

  > img:nth-child(2) {
    left: ($left + 2) + px;
    animation: #{$name}-anim-1 2s infinite linear alternate-reverse;
  }

  > img:nth-child(3) {
    left: ($left - 2) + px;
    animation: #{$name}-anim-2 4s infinite linear alternate-reverse;
  }
}



@mixin svgGlitch($name, $intensity, $fillColor, $background, $fillHighlight1, $fillHighlight2, $width, $height, $top, $left) {
  $steps: $intensity;
  
  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          #{percentage($i*(1/$steps))} {
            clip: rect(
              (random($height)-20)+px,
              $width+px,
              (random($height)+20)+px,
              0
            );
          }
        }
      }
    }
  }
  
  .sprite {
    position: absolute;
    top: $top+px;
    left: $left+px;
    fill: $fillColor;
    background: $background;
    width: $width+px;
    height: $height+px;
  }

  .sprite:nth-child(2),
  .sprite:nth-child(3) {
    clip: rect(0, 0, 0, 0); 
  }

  .sprite:nth-child(2) {
    fill: $fillHighlight1;
    left: ($left - 2) + px;
  }

  .sprite:nth-child(3) {
    fill: $fillHighlight2;
    left: ($left + 2) + px;
  }

  &.play {
    .sprite:nth-child(2) {
      animation: #{$name}-anim-1 3s 1 linear alternate-reverse 1s;
    }

    .sprite:nth-child(3) {
      animation: #{$name}-anim-2 4s infinite linear alternate-reverse 1s;
    }
  }
}